name: Daily Lancers Scrape and Upload

on:
  schedule:
    # JST午前9時に実行 (UTCの午前0時)
    - cron: '0 0 * * *'
  workflow_dispatch: # 手動実行も可能にする

jobs:
  scrape_and_upload:
    runs-on: ubuntu-latest
    # JSTの土日 (UTCの金曜・土曜) は実行しない
    # workflow_dispatchの場合は曜日に関わらず実行
    # cron '0 0 * * *' (UTC 0時 = JST 9時) のため、UTCのFri/SatがJSTのSat/Sunに対応
    if: github.event_name == 'workflow_dispatch' || (github.event.schedule && !contains(fromJson('["Fri", "Sat"]'), format('{0:ddd}', github.event.schedule)))
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # プロジェクトで使用しているPythonバージョンに合わせて調整可能

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers
        run: playwright install --with-deps chromium

      - name: Set up Google Cloud credentials
        env:
          GDRIVE_SA_KEY_JSON_CONTENT: ${{ secrets.GDRIVE_SA_KEY_JSON }}
        run: |
          echo "Creating Google Cloud credentials file..."
          echo "$GDRIVE_SA_KEY_JSON_CONTENT" > ${{ github.workspace }}/service_account_creds.json
          echo "GDRIVE_CREDENTIALS_PATH=${{ github.workspace }}/service_account_creds.json" >> $GITHUB_ENV
          echo "Credentials file created at ${{ github.workspace }}/service_account_creds.json"

      - name: Run scraper for each keyword
        env:
          LANCERS_EMAIL: ${{ secrets.LANCERS_EMAIL }}
          LANCERS_PASSWORD: ${{ secrets.LANCERS_PASSWORD }}
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
          PYTHONIOENCODING: utf-8 # 標準入出力エンコーディングをUTF-8に設定
          # GDRIVE_CREDENTIALS_PATH は上のステップで $GITHUB_ENV に設定済み
        run: |
          if [ ! -f keywords.txt ]; then
            echo "keywords.txt not found!"
            exit 1
          fi
          echo "Starting scrape for keywords in keywords.txt..."
          while IFS= read -r keyword || [ -n "$keyword" ]; do
            # 空行やコメント行をスキップ (任意)
            if [[ -z "$keyword" || "$keyword" =~ ^# ]]; then
              continue
            fi
            echo "--------------------------------------------------"
            echo "Processing keyword: $keyword"
            echo "--------------------------------------------------"
            python src/main.py --search-query "$keyword" --upload-gdrive
            echo "Finished processing keyword: $keyword"
            echo "--------------------------------------------------"
          done < keywords.txt
          echo "All keywords processed."
          
          echo "--------------------------------------------------"
          echo "Processing data search (project)..."
          echo "--------------------------------------------------"
          python src/main.py --data-search-project --upload-gdrive
          echo "Finished processing data search (project)."
          echo "--------------------------------------------------"
